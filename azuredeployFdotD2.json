{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
	"companyName": {
      "type": "string",
      "defaultValue": "ar",
      "metadata": {
        "description": "The name of the company."
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "fdot-d2-llm",
      "metadata": {
        "description": "The name of the project."
      }
    },
        "Azure Search Name": {
            "defaultValue": "[concat('az-search-', parameters('companyName'), '-', parameters('projectName'), '001')]",
            "minLength": 2,
            "maxLength": 60,
            "type": "string",
            "metadata": {
                "description": "Service name must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 60 characters in length."
            }
        },
        "Azure Search SKU": {
            "defaultValue": "standard",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
            ],
            "type": "string",
            "metadata": {
                "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
            }
        },
        "Azure Search replicaCount": {
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 12,
            "type": "int",
            "metadata": {
                "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
            }
        },
        "Azure Search partitionCount": {
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
            ],
            "type": "int",
            "metadata": {
                "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
            }
        },
        "Azure Search hostingMode": {
            "defaultValue": "default",
            "allowedValues": [
                "default",
                "highDensity"
            ],
            "type": "string",
            "metadata": {
                "description": "Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
            }
        },
        "Cognitive Service Name": {
            "defaultValue": "[concat('az-cog-search-',parameters('companyName'), '-', parameters('projectName'),'001')]",
            "type": "string",
            "metadata": {
                "description": "That name is the name of our application. It has to be unique.Type a name followed by your resource group name. (<name>-<resourceGroupName>)"
            }
        },
        "Cognitive Service SKU": {
            "defaultValue": "S0",
            "allowedValues": [
                "S0"
            ],
            "type": "string",
            "metadata": {
                "description": "SKU of Cognitive Services account."
            }
        },
        "Cosmos Account Name": {
            "type": "string",
            "defaultValue": "[concat('az-cosmosdb-account-',parameters('companyName'), '-', parameters('projectName'),'001')]",
            "metadata": {
              "description": "Cosmos DB account name, max length 44 characters, lowercase"
            }
        },
        "Cosmos Database Name": {
            "type": "string",
            "defaultValue": "[concat('az-cosmosdb-',parameters('companyName'), '-', parameters('projectName'),'001')]",
            "metadata": {
              "description": "The name for the CosmosDB database"
            }
          },
        "Cosmos Container Name": {
            "type": "string",
            "defaultValue": "[concat('az-cosmos-container-',parameters('companyName'), '-', parameters('projectName'),'001')]",
            "metadata": {
              "description": "The name for the CosmosDB database container"
            }
          },
	    "resourceTags": {
            "type": "object",
            "defaultValue": {
            "Environment": "Dev",
            "Project": "fdot-d2"
      }
    }
    },
    "resources": [
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2021-04-01-Preview",
            "name": "[parameters('Azure Search Name')]",
            "location": "East US",
			"tags": "[parameters('resourceTags')]",
            "sku": {
                "name": "[parameters('Azure Search SKU')]"
            },
            "properties": {
                "replicaCount": "[parameters('Azure Search replicaCount')]",
                "partitionCount": "[parameters('Azure Search partitionCount')]",
                "hostingMode": "[parameters('Azure Search hostingMode')]",
                "semanticSearch": "free"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2021-10-01",
            "name": "[parameters('Cognitive Service Name')]",
            "location": "East US",
			"tags": "[parameters('resourceTags')]",
            "sku": {
                "name": "[parameters('Cognitive Service SKU')]"
            },
            "kind": "CognitiveServices",
            "properties": {
                "apiProperties": {
                    "statisticsEnabled": false
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-04-01",
            "name": "[parameters('Cosmos Account Name')]",
            "location": "East US",
			"tags": "[parameters('resourceTags')]",
            "kind": "GlobalDocumentDB",
            "properties" : {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                      "locationName": "East US"
                    }
                  ],
                "enableFreeTier": false,
                "isVirtualNetworkFilterEnabled": false,
                "publicNetworkAccess": "Disabled",
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "name": "[concat(parameters('Cosmos Account Name'), '/', parameters('Cosmos Database Name'))]",
            "apiVersion": "2020-04-01",
            "location": "East US",
			"tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos Account Name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('Cosmos Database Name')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(parameters('Cosmos Account Name'), '/', parameters('Cosmos Database Name'), '/', parameters('Cosmos Container Name'))]",
            "apiVersion": "2020-04-01",
            "location": "East US",
			"tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',parameters('Cosmos Account Name'), parameters('Cosmos Database Name'))]"   
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('Cosmos Container Name')]",
                    "partitionKey": {
                        "paths": [
                            "/user_id"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "defaultTtl": 1000
                }   
            }
        }

    ]
}
